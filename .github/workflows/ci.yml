name: Continuous Integration

on:
  push:
    branches:
      - main
      - rc
      - dev
      - feature/*

jobs:
  test-typescript:
    name: TypeScript Tests
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      repository-projects: write

    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        id: setup-node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: npm

      - name: Install Dependencies
        id: npm-ci
        run: npm ci

      - name: Check Format
        id: npm-format-check
        run: npm run format:check

      - name: Lint
        id: npm-lint
        run: npm run lint

      - name: Bundle
        id: npm-bundle
        run: npm run bundle

      - name: Set Permissions Unit Test
        run: |
          echo $(pwd)
          mkdir $(pwd)/__tests__/temp
          chmod -R 777 ${{github.workspace}}/__tests__

          git config --global user.email "codedesignplus@outlook.com"
          git config --global user.name "CodeDesignPlus"

      - name: Test
        id: npm-ci-test
        run: npm run ci-test

      - name: Test Local Action
        id: test-action
        uses: ./
        with:
          folder: ${{github.workspace}}
          release-branch: 'main'
          release-candidate-branch: 'rc'
          beta-branch: 'dev'
          major-identifier: 'breaking'
          minor-identifier: 'feat' 
          prefix: 'v'
          dir-affected: ./
          previous-version: true
          new-version: true

      - name: Print Output
        id: output
        run: | 
          echo Previous Tag "${{ steps.test-action.outputs.previous-tag }}"
          echo Previous Version "${{ steps.test-action.outputs.previous-version }}"
          echo Previous Version Prefix "${{ steps.test-action.outputs.previous-version-prefix }}"
          echo New Version "${{steps.test-action.outputs.new-version}}"
          echo New Version Prefix "${{steps.test-action.outputs.new-version-prefix}}"

      - name: Push tag
        id: push_tag
        uses: mathieudutour/github-tag-action@v6.1
        with:
          custom_tag: ${{ steps.test-action.outputs.new-version }}
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Changelog
        id: build_changelog
        uses: mikepenz/release-changelog-builder-action@v4
        with:
          configuration: "${{ github.workspace }}/.github/settings/configuration.json"          
          fromTag: ${{ steps.test-action.outputs.previous-version-prefix }}
          toTag: ${{ steps.test-action.outputs.new-version-prefix }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      # Publicar release con changelog
      - name: Create GitHub Release
        uses: mikepenz/action-gh-release@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag_name: ${{ steps.test-action.outputs.new-version-prefix }}
          name: "actions/codedesignplus-git-version@${{ steps.test-action.outputs.new-version-prefix }}"

          # files: ./path_to_your_artifacts/*  # si tienes artefactos para incluir en la release, pon la ruta aquí
          body: ${{ steps.build_changelog.outputs.changelog }} # esto usará el changelog generado anteriormente
          prerelease: ${{ contains(github.ref, 'rc') || contains(github.ref, 'dev') }}
          